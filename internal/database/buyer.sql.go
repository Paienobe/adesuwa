// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: buyer.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getBuyerByID = `-- name: GetBuyerByID :one
SELECT id, first_name, last_name, email, profile_image, password FROM buyer WHERE id = $1
`

func (q *Queries) GetBuyerByID(ctx context.Context, id uuid.UUID) (Buyer, error) {
	row := q.db.QueryRowContext(ctx, getBuyerByID, id)
	var i Buyer
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.ProfileImage,
		&i.Password,
	)
	return i, err
}

const registerBuyer = `-- name: RegisterBuyer :one
INSERT into buyer (id, first_name, last_name, email, password)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, first_name, last_name, email, profile_image, password
`

type RegisterBuyerParams struct {
	ID        uuid.UUID
	FirstName string
	LastName  string
	Email     string
	Password  string
}

func (q *Queries) RegisterBuyer(ctx context.Context, arg RegisterBuyerParams) (Buyer, error) {
	row := q.db.QueryRowContext(ctx, registerBuyer,
		arg.ID,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.Password,
	)
	var i Buyer
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.ProfileImage,
		&i.Password,
	)
	return i, err
}

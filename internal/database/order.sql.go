// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: order.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createCustomerOrder = `-- name: CreateCustomerOrder :one
INSERT INTO customer_order (id, customer_id, created_at, updated_at, status, shipping_address, payment_method, payment_status, total_spent)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
RETURNING id, customer_id, created_at, updated_at, status, shipping_address, payment_method, payment_status, total_spent
`

type CreateCustomerOrderParams struct {
	ID              uuid.UUID
	CustomerID      uuid.UUID
	CreatedAt       time.Time
	UpdatedAt       time.Time
	Status          string
	ShippingAddress string
	PaymentMethod   string
	PaymentStatus   string
	TotalSpent      float64
}

func (q *Queries) CreateCustomerOrder(ctx context.Context, arg CreateCustomerOrderParams) (CustomerOrder, error) {
	row := q.db.QueryRowContext(ctx, createCustomerOrder,
		arg.ID,
		arg.CustomerID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Status,
		arg.ShippingAddress,
		arg.PaymentMethod,
		arg.PaymentStatus,
		arg.TotalSpent,
	)
	var i CustomerOrder
	err := row.Scan(
		&i.ID,
		&i.CustomerID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Status,
		&i.ShippingAddress,
		&i.PaymentMethod,
		&i.PaymentStatus,
		&i.TotalSpent,
	)
	return i, err
}
